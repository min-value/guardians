<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.baseball.domain.user.UserMapper">
    <insert id="insertUser" parameterType="org.baseball.dto.UserDTO">
        INSERT INTO `user` (
            user_id,
            user_pwd,
            user_name,
            email,
            tel
        ) VALUES (
            #{userId},
            #{userPwd},
            #{userName},
            #{email},
            #{tel}
        )
    </insert>

    <select id="login" parameterType="string" resultType="org.baseball.dto.UserDTO">
        SELECT user_id AS userId,
               user_pwd AS userPwd,
               user_name AS userName,
               user_pk AS userPk,
               email,
               is_admin AS isAdmin,
               tel,
               total_point as totalPoint
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="checkUser" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM user
        WHERE user_id = #{userId}
    </select>

    <update id="updateUser" parameterType="org.baseball.dto.UserDTO">
        UPDATE `user`
        SET
            user_name = #{userName},
            email = #{email},
            tel = #{tel}
        WHERE user_id = #{userId}
    </update>

    <select id="hasUncancelledReservations" parameterType="int" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM reservation_list rl
                     JOIN reservations r ON rl.reservelist_pk = r.reservelist_pk
                     JOIN games g ON rl.game_pk = g.game_pk
            WHERE rl.user_pk = #{userPk}
              AND r.state = 'PAID'
              AND (rl.cancel_date IS NULL OR rl.is_cancel = 0)
              AND g.game_date >= NOW()
        )
    </select>

    <delete id="deleteReservationsByUser" parameterType="int">
        DELETE FROM reservations
        WHERE reservelist_pk IN (
            SELECT reservelist_pk FROM reservation_list WHERE user_pk = #{userPk}
        )
    </delete>

    <delete id="deleteReservationListByUser" parameterType="int">
        DELETE FROM reservation_list WHERE user_pk = #{userPk}
    </delete>

    <delete id="deletePointsByUser" parameterType="int">
        DELETE FROM point WHERE user_pk = #{userPk}
    </delete>

    <delete id="deleteCommentsByUser" parameterType="int">
        DELETE FROM comment WHERE user_pk = #{userPk}
    </delete>

    <delete id="deletePostsByUser" parameterType="int">
        DELETE FROM post WHERE user_pk = #{userPk}
    </delete>

    <delete id="deleteNumballByUser" parameterType="int">
        DELETE FROM user_numball WHERE user_pk = #{userPk}
    </delete>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM user WHERE user_pk = #{userPk}
    </delete>

    <select id="getTotalPoint" parameterType="int" resultType="int">
        SELECT total_point FROM user WHERE user_pk = #{userPk}
    </select>

    <update id="updateTotalPoint">
        UPDATE user
        SET total_point = total_point + #{amount}
        WHERE user_pk = #{userPk}
    </update>

    <select id="findUserByPk" resultType="org.baseball.dto.UserDTO">
        SELECT user_pk AS userPk,
               user_id AS userId,
               user_pwd AS userPwd,
               user_name AS userName,
               email,
               tel,
               is_admin AS isAdmin,
               win_cnt AS winCnt,
               draw_cnt AS drawCnt,
               lose_cnt AS loseCnt,
               total_point AS totalPoint
        FROM user
        WHERE user_pk = #{userPk}
    </select>

    <select id="findByKakaoToken" parameterType="string" resultType="org.baseball.dto.UserDTO">
        SELECT
        user_pk     AS userPk,
        user_id     AS userId,
        user_name   AS userName,
        email,
        kakao_token AS kakaoToken,
        is_kakao    AS isKakao
        FROM `user`
        WHERE kakao_token = #{kakaoToken}
    </select>

    <insert id="insertKakaoUser" parameterType="org.baseball.dto.UserDTO" useGeneratedKeys="true" keyProperty="userPk">
        INSERT INTO `user`
            (user_id, user_name, email, kakao_token, is_kakao, access_token, refresh_token)
        VALUES
            (#{userId}, #{userName}, #{email}, #{kakaoToken}, #{isKakao}, #{accessToken}, #{refreshToken})
    </insert>

    <update id="updateKakaoUserInfo" parameterType="map">
        UPDATE `user`
        SET email = #{email},
            tel = #{tel},
            access_token = #{accessToken},
            refresh_token = #{refreshToken}
        WHERE user_pk = #{userPk}
    </update>

    <update id="updatePassword">
        UPDATE `user`
        SET user_pwd = #{userPwd}
        WHERE user_id = #{userId}
    </update>

</mapper>