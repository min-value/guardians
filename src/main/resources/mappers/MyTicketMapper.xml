<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.baseball.domain.myticket.MyTicketMapper">
    <select id="selectTicketsByUserPk" parameterType="int" resultType="map">
        SELECT
            u.user_pk AS userPk,
            u.user_name AS userName,
            rl.reserve_code AS reserveCode,
            rl.imp_uid,
            rl.used_point,
            rl.is_cancel AS cancel,
            CONCAT(DATE_FORMAT(rl.reserve_date, '%Y-%m-%d'), ' (',
                   CASE DAYOFWEEK(rl.reserve_date)
                       WHEN 1 THEN '일'
                       WHEN 2 THEN '월'
                       WHEN 3 THEN '화'
                       WHEN 4 THEN '수'
                       WHEN 5 THEN '목'
                       WHEN 6 THEN '금'
                       WHEN 7 THEN '토'
                       END, ') ',
                   DATE_FORMAT(rl.reserve_date, '%H:%i')
            ) AS reserveDate,
            CONCAT(DATE_FORMAT(g.game_date, '%Y-%m-%d'), ' (',
                   CASE DAYOFWEEK(g.game_date)
                       WHEN 1 THEN '일'
                       WHEN 2 THEN '월'
                       WHEN 3 THEN '화'
                       WHEN 4 THEN '수'
                       WHEN 5 THEN '목'
                       WHEN 6 THEN '금'
                       WHEN 7 THEN '토'
                       END, ') ',
                   DATE_FORMAT(g.game_date, '%H:%i')
            ) AS matchDate,
            DATE_FORMAT(g.game_date, '%Y-%m-%dT%H:%i:%s') AS gameDate,
            s.location AS stadium,
            GROUP_CONCAT(CONCAT(z.zone_name, ' ', r.seat_num) SEPARATOR ', ') AS seatInfo,
            6 AS homeTeamPk,
            g.team_pk AS oppTeamPk,
            g.game_pk AS gamePk,
            z.zone_pk AS zonePk,
            GROUP_CONCAT(r.seat_num SEPARATOR ', ') AS seats,
            g.our_score,
            g.opp_score,
            g.result,
            rl.predict,
            gr.our_hit,
            gr.our_homerun,
            gr.our_strikeout,
            gr.our_bb,
            gr.our_miss,
            gr.opp_hit,
            gr.opp_homerun,
            gr.opp_strikeout,
            gr.opp_bb,
            gr.opp_miss
        FROM reservation_list rl
                 JOIN user u ON rl.user_pk = u.user_pk
                 JOIN games g ON rl.game_pk = g.game_pk
                 JOIN stadium s ON g.stadium_pk = s.stadium_pk
                 JOIN reservations r ON rl.reservelist_pk = r.reservelist_pk
                 JOIN zone z ON r.zone_pk = z.zone_pk
                 LEFT JOIN game_result gr ON g.game_pk = gr.game_pk
        WHERE rl.user_pk = #{userPk}
        GROUP BY rl.reservelist_pk
        ORDER BY rl.reserve_date DESC
    </select>
    <update id="cancelReservationList" parameterType="map">
        UPDATE reservation_list set cancel_date = NOW(), is_cancel = 1 where reservelist_pk = #{reservelist_pk}
    </update>
    <update id="cancelReservations" parameterType="map">
        UPDATE reservations set state = 'CANCELED' where reservelist_pk = #{reservelist_pk}
    </update>
    <insert id="insertRefundPoint" parameterType="map">
        INSERT INTO point(user_pk, point, date, type, description)
        VALUES (#{user_pk}, #{point}, NOW(), '티켓 예매 포인트 환불', '사용 환불')
    </insert>
    <update id="updateRefundPoint" parameterType="map">
        UPDATE user SET total_point = total_point + #{point} where user_pk = #{user_pk}
    </update>
    <update id="restoreReservationList" parameterType="map">
        UPDATE reservation_list set cancel_date = null, is_cancel = 0 where reservelist_pk = #{reservelist_pk}
    </update>
    <update id="restoreReservations" parameterType="map">
        UPDATE reservations set state = 'PAID' where reservelist_pk = #{reservelist_pk}
    </update>
    <!--todo-->
    <delete id="deleteRefundPoint" parameterType="map">
        DELETE FROM point
        WHERE user_pk = #{user_pk}
          AND point = #{point}
          AND type = '티켓 예매 포인트 환불'
          AND description = '사용 환불'
            ORDER BY date DESC
    LIMIT 1
    </delete>
    <update id="restoreRefundPoint" parameterType="map">
        UPDATE user SET total_point = total_point - #{point} where user_pk = #{user_pk}
    </update>
</mapper>